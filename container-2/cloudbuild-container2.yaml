options:
  logging: CLOUD_LOGGING_ONLY
  default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET

substitutions:
  _SHORT_SHA: "latest"  

steps:
  # Step 1: Build the Docker image for Container-2 Test
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/kubernetes-assignment-454116/kubernetes-assignment-repo/container2:latest'
      - '-t'
      - 'us-central1-docker.pkg.dev/kubernetes-assignment-454116/kubernetes-assignment-repo/container2:${_SHORT_SHA}'
      - '-f'
      - 'container-2/Dockerfile'
      - 'container-2/'

  # Step 2: Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/kubernetes-assignment-454116/kubernetes-assignment-repo/container2:latest'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/kubernetes-assignment-454116/kubernetes-assignment-repo/container2:${_SHORT_SHA}'


# # Step 3: Authenticate with the GKE cluster
#   - name: 'gcr.io/cloud-builders/gcloud'
#     args:
#       - 'container'
#       - 'clusters'
#       - 'get-credentials'
#       - 'ekta-gke-cluster'  # New cluster name
#       - '--region'
#       - 'us-central1-a'
#       - '--project'
#       - 'kubernetes-assignment-454116'

# # Step 4: Deploy Container 2 to the GKE cluster
#   - name: 'gcr.io/cloud-builders/kubectl'
#     args:
#       - 'apply'
#       - '-f'
#       - 'container-2/container2-deployment.yaml'

images:
  - 'us-central1-docker.pkg.dev/kubernetes-assignment-454116/kubernetes-assignment-repo/container2:${_SHORT_SHA}'
